\hypertarget{intmul_8c}{}\section{src/intmul.c File Reference}
\label{intmul_8c}\index{src/intmul.\+c@{src/intmul.\+c}}


Main program module.  


{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
{\ttfamily \#include $<$unistd.\+h$>$}\newline
{\ttfamily \#include $<$sys/types.\+h$>$}\newline
{\ttfamily \#include $<$sys/wait.\+h$>$}\newline
{\ttfamily \#include $<$string.\+h$>$}\newline
{\ttfamily \#include $<$fcntl.\+h$>$}\newline
Include dependency graph for intmul.\+c\+:
% FIG 0
\subsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{intmul_8c_ada74e7db007a68e763f20c17f2985356}\label{intmul_8c_ada74e7db007a68e763f20c17f2985356}} 
\#define {\bfseries R\+E\+AD}~0
\item 
\mbox{\Hypertarget{intmul_8c_aa10f470e996d0f51210d24f442d25e1e}\label{intmul_8c_aa10f470e996d0f51210d24f442d25e1e}} 
\#define {\bfseries W\+R\+I\+TE}~1
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
static int \hyperlink{intmul_8c_a17f25875dfdd81e516a8e3d7dd5bf30d}{createchild} (char $\ast$A\+\_\+str, char $\ast$B\+\_\+str, char $\ast$res\+\_\+ret)
\begin{DoxyCompactList}\small\item\em This function forks and executes with no arguments, but the parent writes 2 new strings to the childs stdin global variables\+: pgm\+\_\+name. \end{DoxyCompactList}\item 
static void \hyperlink{intmul_8c_a55654f3fc2050df96f72940579f6d780}{add} (char $\ast$a, char $\ast$b, char $\ast$c, char $\ast$d, char $\ast$add\+\_\+res, int n)
\begin{DoxyCompactList}\small\item\em This function adds 4 hexadecimal (as strings) numbers together and writes the result to add\+\_\+res. \end{DoxyCompactList}\item 
static void \hyperlink{intmul_8c_ad96d407a911fbb914fa8e4cfbf2faf0f}{usage} (void)
\begin{DoxyCompactList}\small\item\em This function writes helpful usage information about the program to stderr. \end{DoxyCompactList}\item 
int \hyperlink{intmul_8c_a0ddf1224851353fc92bfbff6f499fa97}{main} (int argc, char $\ast$argv\mbox{[}$\,$\mbox{]})
\begin{DoxyCompactList}\small\item\em This function reads 2 hexadecimal numbers from stdin and splits them in half for further calculation. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Variables}
\begin{DoxyCompactItemize}
\item 
static char $\ast$ \hyperlink{intmul_8c_aad73ccafdb96b6eda42fd71c56cb2d33}{pgm\+\_\+name}
\end{DoxyCompactItemize}


\subsection{Detailed Description}
Main program module. 

\begin{DoxyAuthor}{Author}
Daniel Schloms \href{mailto:e11701253@student.tuwien.ac.at}{\tt e11701253@student.\+tuwien.\+ac.\+at} 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
14.\+12.\+18
\end{DoxyDate}
This program multiplies 2 hexadecimal numbers. 

\subsection{Function Documentation}
\mbox{\Hypertarget{intmul_8c_a55654f3fc2050df96f72940579f6d780}\label{intmul_8c_a55654f3fc2050df96f72940579f6d780}} 
\index{intmul.\+c@{intmul.\+c}!add@{add}}
\index{add@{add}!intmul.\+c@{intmul.\+c}}
\subsubsection{\texorpdfstring{add()}{add()}}
{\footnotesize\ttfamily static void add (\begin{DoxyParamCaption}\item[{char $\ast$}]{a,  }\item[{char $\ast$}]{b,  }\item[{char $\ast$}]{c,  }\item[{char $\ast$}]{d,  }\item[{char $\ast$}]{add\+\_\+res,  }\item[{int}]{n }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [static]}}



This function adds 4 hexadecimal (as strings) numbers together and writes the result to add\+\_\+res. 

Adding function.

Addition formula\+: A$\ast$B = a$^\wedge$n + b$^\wedge$(n/2) + c$^\wedge$(n/2) +d global variables\+: pgm\+\_\+name 
\begin{DoxyParams}{Parameters}
{\em a} & First number. \\
\hline
{\em b} & Second number. \\
\hline
{\em c} & Third number. \\
\hline
{\em d} & Fourth number. \\
\hline
{\em add\+\_\+res} & Result is written to add\+\_\+res. \\
\hline
{\em n} & n from the formula ... Length 2 strings to multiply (from \hyperlink{intmul_8c_a0ddf1224851353fc92bfbff6f499fa97}{main()}) \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{intmul_8c_a17f25875dfdd81e516a8e3d7dd5bf30d}\label{intmul_8c_a17f25875dfdd81e516a8e3d7dd5bf30d}} 
\index{intmul.\+c@{intmul.\+c}!createchild@{createchild}}
\index{createchild@{createchild}!intmul.\+c@{intmul.\+c}}
\subsubsection{\texorpdfstring{createchild()}{createchild()}}
{\footnotesize\ttfamily static int createchild (\begin{DoxyParamCaption}\item[{char $\ast$}]{A\+\_\+str,  }\item[{char $\ast$}]{B\+\_\+str,  }\item[{char $\ast$}]{res\+\_\+ret }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [static]}}



This function forks and executes with no arguments, but the parent writes 2 new strings to the childs stdin global variables\+: pgm\+\_\+name. 

fork and exec

Forking and executing function. 
\begin{DoxyParams}{Parameters}
{\em A\+\_\+str} & First hexadecimal number. \\
\hline
{\em B\+\_\+str} & Second hexadecimal number. \\
\hline
{\em res\+\_\+ret} & Parent reads result from pipe and stores it in res\+\_\+ret. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{intmul_8c_a0ddf1224851353fc92bfbff6f499fa97}\label{intmul_8c_a0ddf1224851353fc92bfbff6f499fa97}} 
\index{intmul.\+c@{intmul.\+c}!main@{main}}
\index{main@{main}!intmul.\+c@{intmul.\+c}}
\subsubsection{\texorpdfstring{main()}{main()}}
{\footnotesize\ttfamily int main (\begin{DoxyParamCaption}\item[{int}]{argc,  }\item[{char $\ast$}]{argv\mbox{[}$\,$\mbox{]} }\end{DoxyParamCaption})}



This function reads 2 hexadecimal numbers from stdin and splits them in half for further calculation. 

Program entry point.

This function reads 2 hexadecimal numbers from stdin, splits them in half (if length $>$ 1) and gives them to \hyperlink{intmul_8c_a17f25875dfdd81e516a8e3d7dd5bf30d}{createchild()} as parameters. The return values are used to calculate a result with \hyperlink{intmul_8c_a55654f3fc2050df96f72940579f6d780}{add()}, which is printed to stdout. global variables\+: pgm\+\_\+name 
\begin{DoxyParams}{Parameters}
{\em argc} & The argument counter. \\
\hline
{\em argv} & The argument vector. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Returns E\+X\+I\+T\+\_\+\+S\+U\+C\+C\+E\+SS. 
\end{DoxyReturn}
\mbox{\Hypertarget{intmul_8c_ad96d407a911fbb914fa8e4cfbf2faf0f}\label{intmul_8c_ad96d407a911fbb914fa8e4cfbf2faf0f}} 
\index{intmul.\+c@{intmul.\+c}!usage@{usage}}
\index{usage@{usage}!intmul.\+c@{intmul.\+c}}
\subsubsection{\texorpdfstring{usage()}{usage()}}
{\footnotesize\ttfamily static void usage (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [static]}}



This function writes helpful usage information about the program to stderr. 

Usage function.

global variables\+: pgm\+\_\+name 

\subsection{Variable Documentation}
\mbox{\Hypertarget{intmul_8c_aad73ccafdb96b6eda42fd71c56cb2d33}\label{intmul_8c_aad73ccafdb96b6eda42fd71c56cb2d33}} 
\index{intmul.\+c@{intmul.\+c}!pgm\+\_\+name@{pgm\+\_\+name}}
\index{pgm\+\_\+name@{pgm\+\_\+name}!intmul.\+c@{intmul.\+c}}
\subsubsection{\texorpdfstring{pgm\+\_\+name}{pgm\_name}}
{\footnotesize\ttfamily char$\ast$ pgm\+\_\+name\hspace{0.3cm}{\ttfamily [static]}}

Program name 